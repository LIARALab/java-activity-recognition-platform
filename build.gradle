buildscript {
    repositories {
      mavenCentral()
      maven {
        url 'https://plugins.gradle.org/m2/'
      }
    }
    dependencies {
      classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE'
      classpath 'gradle.plugin.at.comm_unity.gradle.plugins:jpamodelgen-plugin:1.1.4'
    }
}

plugins {
  id 'com.palantir.git-version' version '0.10.1'
  id 'com.github.ksoichiro.console.reporter' version '0.5.0'
}

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'at.comm_unity.gradle.plugins.jpamodelgen'

defaultTasks 'clean', 'test', 'jacocoTestReport', 'build'

bootJar {
  baseName = 'server'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.13'
  
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-hateoas'
  compile 'org.springframework.boot:spring-boot-starter-json'
  
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  
  compile 'io.springfox:springfox-swagger2:2.8.0'
  compile 'io.springfox:springfox-swagger-ui:2.8.0'
  
  compile 'com.google.guava:guava:24.1-jre'
  compile 'mysql:mysql-connector-java'
  
  compile 'javax.interceptor:javax.interceptor-api:3.1'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
  testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
  testCompile 'org.mockito:mockito-core:2.+'
  testCompile 'com.h2database:h2'
}

jacocoTestReport {
  reports {
    html.destination file('${buildDir}/reports/coverage')
  }
}

javadoc {
  source = sourceSets.main.allJava
  destinationDir = reporting.file('docs')
  options.docletpath = [file('D:\\dev\\doctorat\\json-doclet\\build\\libs\\json-doclet-all.jar')]
  options.doclet = 'org.rnp.javadoc.json.JSONDocumentationDoclet'
  classpath += sourceSets.main.runtimeClasspath
}
